services:
    backend:
        container_name: kvgg_next_gen_backend
        build:
            context: ../..
            dockerfile: ./docker/development/Dockerfile_Backend
        develop:
            watch:
                -   action: sync
                    path: ../..
                    target: /app
        volumes:
            - ../..:/app
        depends_on:
             - database
        restart: on-failure
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8000/api/health" ]
            interval: 30s
            timeout: 10s
            retries: 2
        networks:
            - next_gen_local_net

    frontend:
        container_name: kvgg_next_gen_frontend
        build:
            context: ../..
            dockerfile: ./docker/development/Dockerfile_Frontend
        environment:
            - REACT_APP_DISCORD_OAUTH_URL=https://discord.com/oauth2/authorize?client_id=1076510738576855051&response_type=code&redirect_uri=https%3A%2F%2Flocalhost%2Fapi%2FloginCallback&scope=identify+email
        develop:
            watch:
                -   action: sync
                    path: ../../web
                    target: /app
        volumes:
            - ../../web:/app
        depends_on:
            - backend
            - database
        restart: on-failure
        networks:
            - next_gen_local_net

    caddy:
        image: caddy:2
        container_name: kvgg_next_gen_caddy
        restart: always
        ports:
            - "80:80"
            - "443:443"
            - "3000:3000"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile:ro
            - ../../certs:/etc/certs
        depends_on:
            - backend
            - frontend
        networks:
           - next_gen_local_net

    # bot:
    #     container_name: bot
    #     build:
    #         context: ../..
    #         dockerfile: ./docker/development/Dockerfile_Bot
    #     depends_on:
    #         - database
    #     networks:
    #         - next_gen_local_net
    #     develop:
    #         watch:
    #             -   action: sync
    #                 path: ./src_bot
    #                 target: /app

    database:
        container_name: kvgg_next_gen_db
        image: percona/percona-server:8.0.34-26.1-multi      
        volumes:
            - ./config/docker/percona/conf.d/:/etc/my.cnf.d
            - ./config/docker/percona/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
        environment:
            MYSQL_ROOT_PASSWORD: kvggnextgen
        networks:
            next_gen_local_net:
                ipv4_address: 192.168.100.100
                aliases:
                    - kvgg_next_gen.db.local


networks:
    next_gen_local_net:
        name: kvgg_next_gen_dev_db_network
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 192.168.100.0/24

