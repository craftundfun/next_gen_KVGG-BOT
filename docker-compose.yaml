services:
    backend:
        container_name: backend
        build:
            context: .
            dockerfile: Dockerfile_Backend
        develop:
            watch:
                -   action: sync
                    path: .
                    target: /app
        volumes:
            - .:/app
        #ports:
        #    - "8000:8000"
        restart: on-failure
        networks:
            - caddy_net

    frontend:
        container_name: frontend
        build:
            context: ./web
            dockerfile: Dockerfile
        #ports:
        #    - "3000:3000"
        develop:
            watch:
                -   action: sync
                    path: ./web
                    target: /app
        volumes:
            - ./web:/app
        depends_on:
            - backend
        restart: on-failure
        networks:
            - caddy_net

    caddy:
        image: caddy:2
        container_name: caddy
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile:ro
            - ./certs:/etc/certs
        depends_on:
            - backend
            - frontend
        networks:
            - caddy_net

networks:
    caddy_net:
        driver:
            bridge


    # bot:
    #     container_name: bot
    #     build:
    #         context: .
    #         dockerfile: Dockerfile_Bot
    #     develop:
    #         watch:
    #             -   action: sync
    #                 path: ./src_bot
    #                 target: /app